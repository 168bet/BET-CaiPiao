jdbc.connection.driver_class=com.mysql.jdbc.Driver
jdbc.connection.url=jdbc:mysql://192.168.0.239:3306/xbdb_yabo?characterEncoding=utf-8&noAccessToProcedureBodies=true
jdbc.connection.username=root
jdbc.connection.password=123456

 
#连接池中保留的最小连接数
jdbc.c3p0.minPoolSize=5

#连接池中保留的最大连接数。Default: 15
jdbc.c3p0.maxPoolSize=100

#初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3
jdbc.c3p0.initialPoolSize=3

#最大空闲时间,X秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0
jdbc.c3p0.maxIdleTime=1800

#当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
jdbc.c3p0.acquireIncrement=3

#JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
#属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
#如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0
jdbc.c3p0.maxStatements=0

#每X秒检查所有连接池中的空闲连接。Default: 0
jdbc.c3p0.idleConnectionTestPeriod=60

#定义在从数据库获取新连接失败后重复尝试的次数。Default: 30
jdbc.c3p0.acquireRetryAttempts=30

#获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
#保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
#获取连接失败后该数据源将申明已断开并永久关闭。Default: false
jdbc.c3p0.breakAfterAcquireFailure=false

#因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
#时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
#等方法来提升连接测试的性能。Default: false --
jdbc.c3p0.testConnectionOnCheckout=false
#连接池用完时客户调用getConnection()后等待获取连接的时间，单位：毫秒。超时后会抛出
jdbc.c3p0.checkoutTimeout=100

hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.show_sql=false
hibernate.format_sql=true
hibernate.hbm2dll=none
hibernate.max_fetch_depth=2
hibernate.jdbc.fetch_size=50
hibernate.jdbc.batch_size=50
hibernate.bytecode.use_reflection_optimizer=true
#解决C3P0的APPARENT DEADLOCK
hibernate.c3p0.max_statements=0